<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.he.dao.NoticeMapper">
  <resultMap id="BaseResultMap" type="com.he.pojo.Notice">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="notice_title" jdbcType="VARCHAR" property="noticeTitle" />
    <result column="notice_info" jdbcType="VARCHAR" property="noticeInfo" />
    <result column="notice_date" jdbcType="TIMESTAMP" property="noticeDate" />
    <result column="notice_person" jdbcType="VARCHAR" property="noticePerson" />
    <result column="read_num" jdbcType="INTEGER" property="readNum" />
    <result column="notice_file" jdbcType="VARCHAR" property="noticeFile" />
    <result column="is_publish" jdbcType="TINYINT" property="isPublish" />
    <result column="notice_sort" jdbcType="INTEGER" property="noticeSort" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, category_id, user_id, notice_title, notice_info, notice_date, notice_person, 
    read_num, notice_file, is_publish, notice_sort
  </sql>
  <select id="selectByExample" parameterType="com.he.pojo.NoticeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from notice
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from notice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.he.pojo.NoticeExample">
    delete from notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.he.pojo.Notice">
    insert into notice (id, category_id, user_id, 
      notice_title, notice_info, notice_date, 
      notice_person, read_num, notice_file, 
      is_publish, notice_sort)
    values (#{id,jdbcType=INTEGER}, #{categoryId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{noticeTitle,jdbcType=VARCHAR}, #{noticeInfo,jdbcType=VARCHAR}, #{noticeDate,jdbcType=TIMESTAMP}, 
      #{noticePerson,jdbcType=VARCHAR}, #{readNum,jdbcType=INTEGER}, #{noticeFile,jdbcType=VARCHAR}, 
      #{isPublish,jdbcType=TINYINT}, #{noticeSort,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.he.pojo.Notice">
    insert into notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="noticeTitle != null">
        notice_title,
      </if>
      <if test="noticeInfo != null">
        notice_info,
      </if>
      <if test="noticeDate != null">
        notice_date,
      </if>
      <if test="noticePerson != null">
        notice_person,
      </if>
      <if test="readNum != null">
        read_num,
      </if>
      <if test="noticeFile != null">
        notice_file,
      </if>
      <if test="isPublish != null">
        is_publish,
      </if>
      <if test="noticeSort != null">
        notice_sort,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="noticeTitle != null">
        #{noticeTitle,jdbcType=VARCHAR},
      </if>
      <if test="noticeInfo != null">
        #{noticeInfo,jdbcType=VARCHAR},
      </if>
      <if test="noticeDate != null">
        #{noticeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="noticePerson != null">
        #{noticePerson,jdbcType=VARCHAR},
      </if>
      <if test="readNum != null">
        #{readNum,jdbcType=INTEGER},
      </if>
      <if test="noticeFile != null">
        #{noticeFile,jdbcType=VARCHAR},
      </if>
      <if test="isPublish != null">
        #{isPublish,jdbcType=TINYINT},
      </if>
      <if test="noticeSort != null">
        #{noticeSort,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.he.pojo.NoticeExample" resultType="java.lang.Long">
    select count(*) from notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update notice
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.categoryId != null">
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.noticeTitle != null">
        notice_title = #{record.noticeTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.noticeInfo != null">
        notice_info = #{record.noticeInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.noticeDate != null">
        notice_date = #{record.noticeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.noticePerson != null">
        notice_person = #{record.noticePerson,jdbcType=VARCHAR},
      </if>
      <if test="record.readNum != null">
        read_num = #{record.readNum,jdbcType=INTEGER},
      </if>
      <if test="record.noticeFile != null">
        notice_file = #{record.noticeFile,jdbcType=VARCHAR},
      </if>
      <if test="record.isPublish != null">
        is_publish = #{record.isPublish,jdbcType=TINYINT},
      </if>
      <if test="record.noticeSort != null">
        notice_sort = #{record.noticeSort,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update notice
    set id = #{record.id,jdbcType=INTEGER},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      notice_title = #{record.noticeTitle,jdbcType=VARCHAR},
      notice_info = #{record.noticeInfo,jdbcType=VARCHAR},
      notice_date = #{record.noticeDate,jdbcType=TIMESTAMP},
      notice_person = #{record.noticePerson,jdbcType=VARCHAR},
      read_num = #{record.readNum,jdbcType=INTEGER},
      notice_file = #{record.noticeFile,jdbcType=VARCHAR},
      is_publish = #{record.isPublish,jdbcType=TINYINT},
      notice_sort = #{record.noticeSort,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.he.pojo.Notice">
    update notice
    <set>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="noticeTitle != null">
        notice_title = #{noticeTitle,jdbcType=VARCHAR},
      </if>
      <if test="noticeInfo != null">
        notice_info = #{noticeInfo,jdbcType=VARCHAR},
      </if>
      <if test="noticeDate != null">
        notice_date = #{noticeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="noticePerson != null">
        notice_person = #{noticePerson,jdbcType=VARCHAR},
      </if>
      <if test="readNum != null">
        read_num = #{readNum,jdbcType=INTEGER},
      </if>
      <if test="noticeFile != null">
        notice_file = #{noticeFile,jdbcType=VARCHAR},
      </if>
      <if test="isPublish != null">
        is_publish = #{isPublish,jdbcType=TINYINT},
      </if>
      <if test="noticeSort != null">
        notice_sort = #{noticeSort,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.he.pojo.Notice">
    update notice
    set category_id = #{categoryId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      notice_title = #{noticeTitle,jdbcType=VARCHAR},
      notice_info = #{noticeInfo,jdbcType=VARCHAR},
      notice_date = #{noticeDate,jdbcType=TIMESTAMP},
      notice_person = #{noticePerson,jdbcType=VARCHAR},
      read_num = #{readNum,jdbcType=INTEGER},
      notice_file = #{noticeFile,jdbcType=VARCHAR},
      is_publish = #{isPublish,jdbcType=TINYINT},
      notice_sort = #{noticeSort,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>