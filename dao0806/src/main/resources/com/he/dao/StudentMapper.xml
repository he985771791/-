<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.he.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="com.he.pojo.Student">
    <id column="stuId" jdbcType="VARCHAR" property="stuid" />
    <result column="stuName" jdbcType="CHAR" property="stuname" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="dept" jdbcType="VARCHAR" property="dept" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.he.pojo.Student">
    <result column="photo" jdbcType="LONGVARBINARY" property="photo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    stuId, stuName, sex, birthday, tel, dept, grade
  </sql>
  <sql id="Blob_Column_List">
    photo
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.he.pojo.StudentExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.he.pojo.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from student
    where stuId = #{stuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from student
    where stuId = #{stuid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.he.pojo.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.he.pojo.Student">
    insert into student (stuId, stuName, sex, 
      birthday, tel, dept, 
      grade, photo)
    values (#{stuid,jdbcType=VARCHAR}, #{stuname,jdbcType=CHAR}, #{sex,jdbcType=CHAR}, 
      #{birthday,jdbcType=TIMESTAMP}, #{tel,jdbcType=VARCHAR}, #{dept,jdbcType=VARCHAR}, 
      #{grade,jdbcType=INTEGER}, #{photo,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.he.pojo.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stuid != null">
        stuId,
      </if>
      <if test="stuname != null">
        stuName,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="dept != null">
        dept,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="photo != null">
        photo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stuid != null">
        #{stuid,jdbcType=VARCHAR},
      </if>
      <if test="stuname != null">
        #{stuname,jdbcType=CHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="dept != null">
        #{dept,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="photo != null">
        #{photo,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.he.pojo.StudentExample" resultType="java.lang.Long">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.stuid != null">
        stuId = #{record.stuid,jdbcType=VARCHAR},
      </if>
      <if test="record.stuname != null">
        stuName = #{record.stuname,jdbcType=CHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.dept != null">
        dept = #{record.dept,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=INTEGER},
      </if>
      <if test="record.photo != null">
        photo = #{record.photo,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update student
    set stuId = #{record.stuid,jdbcType=VARCHAR},
      stuName = #{record.stuname,jdbcType=CHAR},
      sex = #{record.sex,jdbcType=CHAR},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      tel = #{record.tel,jdbcType=VARCHAR},
      dept = #{record.dept,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=INTEGER},
      photo = #{record.photo,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set stuId = #{record.stuid,jdbcType=VARCHAR},
      stuName = #{record.stuname,jdbcType=CHAR},
      sex = #{record.sex,jdbcType=CHAR},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      tel = #{record.tel,jdbcType=VARCHAR},
      dept = #{record.dept,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.he.pojo.Student">
    update student
    <set>
      <if test="stuname != null">
        stuName = #{stuname,jdbcType=CHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="dept != null">
        dept = #{dept,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="photo != null">
        photo = #{photo,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where stuId = #{stuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.he.pojo.Student">
    update student
    set stuName = #{stuname,jdbcType=CHAR},
      sex = #{sex,jdbcType=CHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      tel = #{tel,jdbcType=VARCHAR},
      dept = #{dept,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=INTEGER},
      photo = #{photo,jdbcType=LONGVARBINARY}
    where stuId = #{stuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.he.pojo.Student">
    update student
    set stuName = #{stuname,jdbcType=CHAR},
      sex = #{sex,jdbcType=CHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      tel = #{tel,jdbcType=VARCHAR},
      dept = #{dept,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=INTEGER}
    where stuId = #{stuid,jdbcType=VARCHAR}
  </update>
</mapper>